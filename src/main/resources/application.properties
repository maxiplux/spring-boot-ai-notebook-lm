# Application name
spring.application.name=summay
# OpenAI API configuration
spring.ai.openai.api-key=${OPEN_AI_API_KEY}
spring.ai.openai.model-name=gpt-4-turbo
# PostgreSQL datasource configuration
spring.datasource.url=jdbc:postgresql://localhost:5432/app
spring.datasource.username=app
spring.datasource.password=app
spring.datasource.driver-class-name=org.postgresql.Driver
# JPA/Hibernate configuration
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=update
# Kafka configuration
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.consumer.group-id=my-group
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.value-deserializer=app.quantun.summary.config.serializer.CustomJsonDeserializer
spring.kafka.consumer.properties.spring.json.value.default.type=java.util.HashMap
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=app.quantun.summary.config.serializer.CustomJsonSerializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*
spring.kafka.listener.type=batch
# Google Gemini configuration
#spring.ai.google.gemini.api-key=${GEMINI_API_KEY}
spring.ai.google.gemini.model=gemini-2.0-flash-exp
spring.ai.vertex.ai.gemini.location=us-central1
spring.ai.vertex.ai.gemini.project-id=${GEMINI_PROJECT_ID}
spring.ai.google.gemini.chat.options.temperature=1.0
spring.ai.google.gemini.chat.options.top-p=0.95
spring.ai.google.gemini.chat.options.top-k=40
# File upload configuration
spring.servlet.multipart.max-file-size=5000MB
spring.servlet.multipart.max-request-size=5000MB
# Azure TTS configuration
azure.tts.subscription-key=${AZURE_TTS_SUBSCRIPTION_KEY}
azure.tts.server-url=${AZURE_TTS_SERVER_URL}
# Application-specific configuration
app.config.pdf.upload.path=c:/tmp/summary-ai-pdf/
app.config.tts.save.path=c:/tmp/summary-ai-tts/
# Logging configuration
logging.level.root=INFO
logging.level.org.springframework.web.reactive.function.client=INFO
logging.level.org.springframework.http.codec=INFO
logging.level.org.springframework.web.service=INFO

# Validation for configuration properties
spring.datasource.validation-query=SELECT 1
spring.kafka.consumer.properties.spring.json.value.default.type=java.util.HashMap
spring.kafka.consumer.properties.spring.json.trusted.packages=*

# Checkstyle configuration
checkstyle.toolVersion=10.3.4
checkstyle.configFile=config/google_checks.xml
